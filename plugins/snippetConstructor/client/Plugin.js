#lx:use lx.ActiveBox;

#lx:require -R src/;

class Plugin extends lx.Plugin {
    run() {
        //TODO --dev
        var testBut = this.root.add(lx.Box, {geom: [null, null, 10, 10, 0, 0]});
        testBut.border();
        testBut.click(()=>{
            console.log('!!!TEST');
            console.log(this.core);
        });
        /*
        TODO
        Сокращения:
            - СП - стратегии позиционирования
        Доделывать:
        - добавить EggMenu для эдитора пропорционального грида
            - возможность менять количество строк и колонок
            - возможность менять отступы
            - возможность менять минимальные размеры ячеек
        - доделать полиморфизм эдиторов для разных СП
            - реализация эдиторов для обычного грида(?), обычной СП, карты
            - EggMenu для СП кому это нужно
        - реализовать переключение СП
            - использовать справочник в модели для ContentNodeSelected, реализовать связывание с выпадающим списком

        - реализовать переключение типа виджета
            - нужно разметить код классов виджетов доками
            - использовать справочник в модели для ContentNodeSelected, реализовать связывание с выпадающим списком

        - реализовать редактирование массива CSS-классов
        - реализовать редактирование конфигурации элемента
            - геоматрия отдельно (включая volume:true/false)
            - информация для полей конфигурирования берется из парсинга доков виджетов
        - реализовать редактирование вызовов методов
            - нужно разметить код методов виджетов доками
            - информация для доступных методов и их аргументов берется из парсинга доков методов виджетов

        - реализовать множественное выделение
        - реализовать интерфейс создания блоков из узлов дерева, идущих подряд
        - крупная подзадача - эдитор пресетов
        */


        // Загружаю тестовый сниппет
        let testPlugin = 'lx/help:test';
        let testSnippet = 'snippets/test2.lxtpl';
        this.on('e-pluginSelected', ()=>{
            this.core.loadSnippet(testSnippet);
        });
        this.on('e-snippetAdded', ()=>{
            // Code

        });

        this.on('e-referencesLoaded', ()=>{
            this.core.selectPlugin(testPlugin);
        })



    }
}
